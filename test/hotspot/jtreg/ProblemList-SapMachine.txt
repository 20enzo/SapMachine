###############################################################################
#
# This is the additional jtreg exclude list for SapMachine hotspot tests.
#
# List of tests that should not be run by test/Makefile, for various reasons:
#   1. Does not run with jtreg -samevm mode
#   2. Causes problems in jtreg -samevm mode for jtreg or tests that follow it
#   3. The test is too slow or consumes too many system resources
#   4. The test fails when run on any official build systems
#
# Tests marked @ignore are not run by test/Makefile, but harmless to be listed.
#
# List items are testnames followed by labels, all MUST BE commented
#   as to why they are here and use a label:
#     generic-all   Problems on all platforms
#     generic-ARCH  Where ARCH is one of: sparc, sparcv9, x64, i586, ppc64,
#                   ppc64le, s390x etc
#     OSNAME-all    Where OSNAME is one of: solaris, linux, windows, macosx, aix
#     OSNAME-ARCH   Specific on to one OSNAME and ARCH, e.g. solaris-amd64
#     OSNAME-REV    Specific on to one OSNAME and REV, e.g. solaris-5.8
#
# More than one label is allowed but must be on the same line comma seperated,
# without spaces!
# If there are several lines, the last one is used.
#
# SAP/SapMachine usage notes:
#
# This exclude list should be a vehicle only for temporary exclusions of tests
# or exclusions that are caused by infrastrucure specifics.
#
# Our first goal should be to fix test issues upstream or at least open
# upstream bugs and get the test excluded via the upstream exclusion lists.
#
# We have both internal exclude lists and exclude lists in the SapMachine
# repository. The internal lists are the master and the public lists in the
# SapMachine repository will be refreshed regularly, removing comments
# which reveal internal URLs, names or hostnames.
#
# The public SapMachine exclusion lists might contain additional test
# exclusions, specific to the SapMachine build and test infrastructure. That
# section needs to be placed at the end of the file.
#
###############################################################################

###############################################################################
# Tests known to be failing in OpenJDK when JDK 11 was released (9/2018)

# SapMachine 2018-08-22
# Failing as of today, and ever before.
# SapMachine 2019-03-07, 2019-04-30 Still fails in 11.
#vmTestbase/nsk/jvmti/unit/functions/AddToBootstrapClassLoaderSearch/JvmtiTest/TestDescription.java windows-all

# SapMachine 2018-08-28
# This crashes on sparc with "The system is out of physical RAM or swap space".
# Only jdk11, why that? Ev. add -Xmx200M.
# SapMachine 2019-02-21, 2019-05-08 Still failing in 11.
#runtime/appcds/sharedStrings/InvalidFileFormat.java                                  solaris-sparcv9

# SapMachine 2018-11-07
# Remaining tests failing on ntintel in jdk11.
# ClhsdbLongConstant.java:84: Reading markOopDesc::hash_mask_in_place. Expected 4294967168. Obtained -128 instead.
# SapMachine 2019-05-08 Still fails in 11.
#serviceability/sa/ClhsdbLongConstant.java                                            windows-i586

###############################################################################
# Tests known to be failing in OpenJDK when JDK 12 was released (3/2019)

# SapMachine 2018-11-08
# RuntimeException: The size computed by SA for java.lang.Object does not match.
# SapMachine 2019-07-16 still failing on linuxxppc64, linux-ppc64le
# excluding also solaris-all because of common exclude list
#
serviceability/sa/TestInstanceKlassSize.java                                 8193639 solaris-all,linux-ppc64le,linux-ppc64

# SapMachine 2018-11-08
# Sporadic timeouts only on linuxppc64.
# SapMachine 2019-06-28 Check whether fixed
#serviceability/sa/TestJmapCoreMetaspace.java                                         linux-ppc64

# SapMachine 2018-12-11
# java.lang.OutOfMemoryError: Java heap space
# SapMachine 2019-07-16 Occured in 12 (but this time rather timeouted)
# Maybe fixed/improved with JDK-8223447, but the patch should be part of the codebase that failed in 12 on 2019-07-16
#
# SapMachine 2019-06-28 Check whether fixed
#gc/shenandoah/TestStringDedupStress.java                                             linux-aarch64,macosx-all,linux-x64

# SapMachine 2019-01-08
# More Shenandoah failures.
# SapMachine 2019-06-28 Check whether fixed
#gc/arguments/TestUseCompressedOopsErgo.java                                          windows-all
#gc/arguments/TestUseCompressedOopsErgo.java#id2                                      windows-all
#gc/metaspace/TestMetaspacePerfCounters.java                                          windows-all
#gc/metaspace/TestMetaspacePerfCounters.java#id1                                      windows-all
#gc/shenandoah/compiler/TestReferenceCAS.java                                         windows-all
#gc/shenandoah/oom/TestClassLoaderLeak.java                                           windows-all

# SapMachine 2019-01-08
# RuntimeException: Total aborts count (1002) should be less or equal to 1001: expected that 1002 <= 1001
# SapMachine 2019-08-07 Still failing
#
compiler/rtm/locking/TestRTMSpinLoopCount.java                                       generic-ppc64,linux-ppc64le

# SapMachine 2019-01-08
# Could not reserve enough space for 131072KB object heap
# SapMachine 2019-06-28 Check whether fixed
#gc/shenandoah/jvmti/TestHeapDump.java                                                windows-all
# fatal error: Safepoint sync time longer than 10000ms detected when executing Cleanup.
# SapMachine 2019-06-28 Check whether fixed
#gc/shenandoah/TestVerifyJCStress.java                                                windows-all
# fatal error: Safepoint sync time longer than 10000ms detected when executing ShenandoahInitMark.
# SapMachine 2019-06-28 Check whether fixed
#gc/shenandoah/TestRegionSampling.java                                                windows-all

# SapMachine 2019-02-08
# SapMachine 2019-06-28 Check whether fixed
#runtime/CompressedOops/UseCompressedOops.java                                        windows-all

# SapMachine 2019-02-13
# Timeouts seen sporadic on various platforms and Java versions.
# Still failing 2019-04-29, 2019-07-16
# Seems this one is fixed with 8206074 in OpenJDK 13 and 14. We shall take care of a backport.
#
# SapMachine 2019-08-02 Fix pushed to jdk11u-dev, shall remove this section in a few days after checking that it doesn't occur any more.
#vmTestbase/nsk/jdi/EventRequestManager/createStepRequest/crstepreq001/TestDescription.java 8206074 generic-all

# SapMachine 2019-03-11
# Fails with timeout or "Could not find any processes matching : 'HelpTest$Process'"
#
#
# SapMachine 2019-07-15 Still seen in 11 - 14, rarely on others than windows.
# SapMachine 2019-08-08 Backported 8205654 to 11 - but this will probably fix the issue for linux only.
# For Windows, we should keep the test excluded or we'll see some failing tests sporadically.
serviceability/dcmd/framework/HelpTest.java                                          windows-all

# SapMachine 2019-04-29
# java.lang.IllegalStateException: WB_IncMetaspaceCapacityUntilGC: could not increase capacity until GC due to contention with another thread
# SapMachine 2019-04-30 Still fails in 11.0.4
gc/metaspace/TestCapacityUntilGCWrapAround.java                                      windows-i586

# SapMachine 2019-04-29
# Sporadic timeout 11 only since 3.3.2019, which is probably the date we started to run these again.
vmTestbase/nsk/jdb/unwatch/unwatch002/unwatch002.java                                generic-all

# SapMachine 2019-04-29
# Very sporadic on linux/ppc.
# Can't attach to the process: ptrace(PTRACE_ATTACH, ..) failed for 4253: No such process
# Enable it to find one of the sporadic occurances and paste the link here.
#serviceability/sa/TestJhsdbJstackMixed.java                                          linux-ppc64le,linux-ppc64

# SapMachine 2019-05-08
# These fail because a path breaks a windows limit in jdk11u-dev.
#
#
#
vmTestbase/nsk/jvmti/AddToBootstrapClassLoaderSearch/bootclssearch001/TestDescription.java         8191521 windows-all
vmTestbase/nsk/jvmti/AddToBootstrapClassLoaderSearch/bootclssearch002/TestDescription.java         8191521 windows-all
vmTestbase/nsk/jvmti/AddToBootstrapClassLoaderSearch/bootclssearch003/TestDescription.java         8191521 windows-all
vmTestbase/nsk/jvmti/AddToBootstrapClassLoaderSearch/bootclssearch004/TestDescription.java         8191521 windows-all
vmTestbase/nsk/jvmti/AddToBootstrapClassLoaderSearch/bootclssearch007/TestDescription.java         8191521 windows-all
vmTestbase/nsk/jvmti/AddToBootstrapClassLoaderSearch/bootclssearch010/TestDescription.java         8191521 windows-all
vmTestbase/nsk/jvmti/unit/functions/AddToBootstrapClassLoaderSearch/JvmtiTest/TestDescription.java 8191521 windows-all

# SapMachine 2019-06-07
# Timeouts, observed only in 11.
#
# SapMachine 2019-07-17 Still occuring in 11
#vmTestbase/vm/mlvm/cp/stress/classfmt/mt/TestDescription.java                        generic-ppc64,linux-ppc64le

# SapMachine 2019-06-28
# Sporadic on some x64 systems
#
#
# SapMachine 2019-08-02 Fix pushed to 11.0.5 and 13, should remove this entry in a few days.
#runtime/memory/RunUnitTestsConcurrently.java                                 8227041 linux-x64,windows-x64

# SapMachine 2019-06-28
# Error message: AttemptOOM allocation successful, seen on quite some hosts
# Attention, the test has moved from the runtime subdirectory to the test root directory in 13
#
#
#
# SapMachine 2019-07-19 Still failing.
containers/docker/TestMemoryAwareness.java                                           linux-ppc64le,linux-s390x

###############################################################################
# Failing new tests, unsupported new features in jdk13

# SapMachine 2018-12-11
# Some brand new shenandoah tests are failing.
#
# SapMachine 2019-07-25 Still around
gc/shenandoah/TestWithLogLevel.java                                                  macosx-all

# SapMachine 2018-12-31 Tests failing on aarch64. Won't fix.
# The sa tests are also in the central problem list, append them as jtreg overwrites the other entries.
# SapMachine 2019-06-28 Check whether fixed
#serviceability/sa/ClhsdbFindPC.java                                                  linux-aarch64,solaris-all,linux-ppc64le,linux-ppc64
#serviceability/sa/ClhsdbJstack.java                                                  linux-aarch64,solaris-all,linux-ppc64le,linux-ppc64
#serviceability/sa/TestClhsdbJstackLock.java                                          linux-aarch64,solaris-all,linux-ppc64le,linux-ppc64
#serviceability/sa/TestJhsdbJstackLock.java                                           linux-aarch64,solaris-all,linux-ppc64le,linux-ppc64
#compiler/c2/cr6340864/TestIntVect.java                                               linux-aarch64
#compiler/c2/cr6340864/TestLongVect.java                                              linux-aarch64
#compiler/c2/cr6340864/TestShortVect.java                                             linux-aarch64
#compiler/codegen/TestCharVect2.java                                                  linux-aarch64
#compiler/cpuflags/TestAESIntrinsicsOnUnsupportedConfig.java                          linux-aarch64
#gc/shenandoah/mxbeans/TestChurnNotifications.java                                    linux-aarch64
#gc/shenandoah/mxbeans/TestPauseNotifications.java                                    linux-aarch64

# SapMachine 2019-01-28
# Failing on ntamd64, linuxx86_64, linuxxppc64 ... but not all.
# SapMachine 2019-06-28 Check whether fixed
#runtime/SharedArchiveFile/serviceability/ReplaceCriticalClasses.java                 generic-all

# SapMachine 2019-04-29
# sporadic timeouts in 12 and 13.
# SapMachine 2019-07-15 Check whether still fails
#runtime/ErrorHandling/TestHeapDumpOnOutOfMemoryErrorInMetaspace.java                 generic-ppc64

# SapMachine 2019-06-28
# RuntimeException: '.*(?:HotSpot|OpenJDK).*VM.*' missing from stdout/stderr or just timeout. Seen also in 13.
#
#
# SapMachine 2019-08-08 Backported 8205654 to 11 - but this will probably fix the issue for linux only.
# For Windows, we should keep the test excluded or we'll see some failing tests sporadically.
serviceability/dcmd/framework/VMVersionTest.java                                     windows-all

# SapMachine 2019-07-15
# This times out since about 19-05-18 in OpenJDK 13 and 14 tests on power platforms. Excluding.
#
#
# SapMachine 2019-07-19 CodeHeap::invalidate is too slow in dbg build
compiler/codecache/OverflowCodeCacheTest.java                                        linux-ppc64le,linux-ppc64,aix-all

# SapMachine 2019-07-17
# Excluding for now and opening a bug.
#
#
runtime/NMT/CheckForProperDetailStackTrace.java                                      aix-all
runtime/NMT/CommitOverlappingRegions.java                                            aix-all
runtime/NMT/JcmdDetailDiff.java                                                      aix-all
runtime/NMT/JcmdSummaryDiff.java                                                     aix-all
runtime/NMT/PrintNMTStatistics.java                                                  aix-all
runtime/NMT/ReleaseNoCommit.java                                                     aix-all
runtime/NMT/SafepointPollingPages.java                                               aix-all
runtime/NMT/ThreadedVirtualAllocTestType.java                                        aix-all
runtime/NMT/VirtualAllocAttemptReserveMemoryAt.java                                  aix-all
runtime/NMT/VirtualAllocCommitMerge.java                                             aix-all
runtime/NMT/VirtualAllocCommitUncommitRecommit.java                                  aix-all
runtime/NMT/VirtualAllocTestType.java                                                aix-all

# SapMachine 2019-07-17
# Crashes on s390
#
#
# SapMachine 2019-07-30
# There is still an issue in vmTestbase/nsk/jvmti/scenarios/capability/CM03/cm03t001/TestDescription.java
#
#
# SapMachine 2019-08-08 We also saw this in 11.
#vmTestbase/nsk/jvmti/RedefineClasses/StressRedefine/TestDescription.java                          8228618 linux-s390x
#vmTestbase/nsk/jvmti/RedefineClasses/StressRedefineWithoutBytecodeCorruption/TestDescription.java 8228618 linux-s390x
vmTestbase/nsk/jvmti/scenarios/capability/CM03/cm03t001/TestDescription.java                      8228618 linux-s390x

# SapMachine 2019-07-22
# Timeout. We see this regularly.
#
#
compiler/jsr292/ContinuousCallSiteTargetChange.java                                  linux-ppc64

###############################################################################
# Tests known to be failing in SapMachine due to SapMachine specific setup.

# SapMachine 2018-10-05
# This test fails, because we do not have debug symbols available in all tests.
runtime/NMT/CheckForProperDetailStackTrace.java                                      generic-all

# SapMachine 2019-01-30 These tests fail for some reason on linux-ppc64le and linux-ppc64. Need to investigate.
gc/g1/humongousObjects/TestHumongousClassLoader.java                                 linux-ppc64le,linux-ppc64
gc/g1/humongousObjects/TestHumongousNonArrayAllocation.java                          linux-ppc64le,linux-ppc64
